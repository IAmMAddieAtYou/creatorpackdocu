"use strict";(self.webpackChunkcreatorpackdocu=self.webpackChunkcreatorpackdocu||[]).push([[483],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,y=u["".concat(c,".").concat(m)]||u[m]||p[m]||a;return n?o.createElement(y,i(i({ref:t},d),{},{components:n})):o.createElement(y,i({ref:t},d))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1499:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:2},i="Auto Dynamic Collider",l={unversionedId:"CreatorEssential/AutoDynamicCollider",id:"CreatorEssential/AutoDynamicCollider",title:"Auto Dynamic Collider",description:"AutoDynamicCollider is a Unity script that assists in the automatic addition of Dynamic Bone Colliders to the Avatar. It is included in the Creator Essentials Pack by QueenMaebee.",source:"@site/docs/CreatorEssential/AutoDynamicCollider.md",sourceDirName:"CreatorEssential",slug:"/CreatorEssential/AutoDynamicCollider",permalink:"/creatorpackdocu/docs/CreatorEssential/AutoDynamicCollider",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Auto Phys Collider",permalink:"/creatorpackdocu/docs/CreatorEssential/AutoPhysCollider"},next:{title:"AutoPhysBone",permalink:"/creatorpackdocu/docs/CreatorEssential/AutoPhysBone"}},c={},s=[],d={toc:s};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"auto-dynamic-collider"},"Auto Dynamic Collider"),(0,r.kt)("p",null,"AutoDynamicCollider is a Unity script that assists in the automatic addition of Dynamic Bone Colliders to the Avatar. It is included in the Creator Essentials Pack by QueenMaebee."),(0,r.kt)("h1",{id:"setting-up-the-script"},"Setting up the Script"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"AutoDynamicColliderScript",src:n(8910).Z,width:"479",height:"653"})),(0,r.kt)("p",null,"Drag in the AutoDynamicCollider Prefab.\nWhen setting up AutoDynamicColliders, it all depends on your intentions. ",(0,r.kt)("strong",{parentName:"p"},"Remember, AutoDynamicColliders is completely user-defined other than things that include the following words:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},' "Breast",')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'"Boob",')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'"Tail"')),(0,r.kt)("p",null,'The only thing needed to use the script is to add your SDKAvatar into the "SDK 3 Avatar" field, and then, after you have done that, put in the Hip, Spine and Head bones into the array.'),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"There is no need to change the size of the arrays. You can drag and drop the assets onto the name of the array and it will be automatically added.")),(0,r.kt)("h1",{id:"custom-fields-and-custom-dynamic-bone-components"},"Custom Fields and Custom Dynamic Bone Components"),(0,r.kt)("p",null,"Custom fields are a way to add colliders to any bone or Gameobject."),(0,r.kt)("p",null,"Custom Dynamic Bone Components are Dynamic Bone components. This is an excellent method for adding colliders to specific Dynamic components."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The CustomDynamicColliders field should not be touched!")),(0,r.kt)("p",null,"Once you have finished everything up just click the Activate Script Button!"))}u.isMDXComponent=!0},8910:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/AutoDynamicCollider-ff83c8bca89a467d46270a4b5c176536.png"}}]);