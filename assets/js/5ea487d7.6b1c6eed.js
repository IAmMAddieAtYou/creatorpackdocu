"use strict";(self.webpackChunkcreatorpackdocu=self.webpackChunkcreatorpackdocu||[]).push([[3814],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(r),h=o,y=d["".concat(l,".").concat(h)]||d[h]||p[h]||a;return r?n.createElement(y,i(i({ref:t},u),{},{components:r})):n.createElement(y,i({ref:t},u))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},6586:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:1},i="Auto Phys Collider",s={unversionedId:"CreatorEssential/AutoPhysCollider",id:"CreatorEssential/AutoPhysCollider",title:"Auto Phys Collider",description:"AutoPhysCollider is a Unity script that assists in the automatic addition of VRCPhysBone Colliders to the Avatar. It is included in the Creator Essentials Pack by QueenMaebee.",source:"@site/docs/CreatorEssential/AutoPhysCollider.md",sourceDirName:"CreatorEssential",slug:"/CreatorEssential/AutoPhysCollider",permalink:"/creatorpackdocu/docs/CreatorEssential/AutoPhysCollider",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/CreatorEssential/AutoPhysCollider.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"CreatorEssential",permalink:"/creatorpackdocu/docs/category/creatoressential"},next:{title:"Auto Dynamic Collider",permalink:"/creatorpackdocu/docs/CreatorEssential/AutoDynamicCollider"}},l={},c=[],u={toc:c};function d(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"auto-phys-collider"},"Auto Phys Collider"),(0,o.kt)("p",null,"AutoPhysCollider is a Unity script that assists in the automatic addition of VRCPhysBone Colliders to the Avatar. It is included in the Creator Essentials Pack by QueenMaebee."),(0,o.kt)("h1",{id:"setting-up-the-script"},"Setting up the Script"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"AutoPhysColliderScript",src:r(6137).Z,width:"601",height:"601"})),(0,o.kt)("p",null,"Drag in the AutoPhysCollider Prefab.\nWhen setting up AutoPhysColliders, it all depends on your intentions. ",(0,o.kt)("strong",{parentName:"p"},"Remember, AutoPhysColliders is completely user-defined other than things that include the following words:")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},' "Breast",')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},'"Boob",')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},'"Tail"')),(0,o.kt)("p",null,'The only thing needed to use the script is to add your SDKAvatar into the "SDK 3 Avatar" field, and then, after you have done that, put in the Hip, Spine and Head bones into the array.'),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"There is no need to change the size of the arrays. You can drag and drop the assets onto the name of the array and it will be automatically added.")),(0,o.kt)("h1",{id:"custom-fields-and-custom-physbone-components"},"Custom Fields and Custom PhysBone Components"),(0,o.kt)("p",null,"Custom fields are a way to add colliders to any bone or Gameobject."),(0,o.kt)("p",null,"Custom PhysBone Components are PhysBone components. This is an excellent method for adding colliders to specific physical components."),(0,o.kt)("p",null,"Once you have finished everything up just click the Activate Script Button!"))}d.isMDXComponent=!0},6137:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/AutoPhysCollider-201d2255812cabd8b87a7214b7ef446a.png"}}]);